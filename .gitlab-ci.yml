# image: docker:20.10.11

# variables:
#   # When using dind service, you must instruct docker to talk with the
#   # daemon started inside of the service. The daemon is available with
#   # a network connection instead of the default /var/run/docker.sock socket.
#   #
#   # The 'docker' hostname is the alias of the service container as described at
#   # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services
#   #
#   # If you're using GitLab Runner 12.7 or earlier with the Kubernetes executor and Kubernetes 1.6 or earlier,
#   # the variable must be set to tcp://localhost:2375 because of how the
#   # Kubernetes executor connects services to the job container
#   # DOCKER_HOST: tcp://localhost:2375
#   #
#   DOCKER_HOST: tcp://docker:2375
#   #
#   # This instructs Docker not to start over TLS.
#   DOCKER_TLS_CERTDIR: ""
#   # 
#   # Checkout submodules recursively
#   GIT_SUBMODULE_STRATEGY: recursive

# services:
#   - docker:20.10.11-dind

# before_script:
#   - docker info
#   - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

# build-latest:
#   stage: build
#   only:
#     - tags
#   script:
#     - docker pull $CI_REGISTRY_IMAGE:latest || true
#     - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
#     - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
#     - docker push $CI_REGISTRY_IMAGE:latest

# # build-branches:
# #   stage: build
# #   except:
# #     - master
# #     - main
# #   script:
# #     - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH || true
# #     - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH .
# #     - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
# #     - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH