




	
	
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		
		
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lists on Introduction to Python</title>
    <link>https://ksu-cs-textbooks.github.io/intro-python/07-lists/index.html</link>
    <description>Recent content in Lists on Introduction to Python</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://ksu-cs-textbooks.github.io/intro-python/07-lists/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction</title>
      <link>https://ksu-cs-textbooks.github.io/intro-python/07-lists/01-intro/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/intro-python/07-lists/01-intro/index.html</guid>
      <description>Resources Slides As our Python programs continue to get larger and more complex, we may notice that we are reusing certain pieces of code over and over again. A great example is the loop structure to repeatedly get input from the user until a valid input is received.
x = float(input(&amp;#34;Enter a percentage as a decimal number from 0 to 1: &amp;#34;)) while(x &amp;lt; 0 or x &amp;gt; 1): print(&amp;#34;Invalid Input!</description>
    </item>
    <item>
      <title>Lists</title>
      <link>https://ksu-cs-textbooks.github.io/intro-python/07-lists/02-lists/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/intro-python/07-lists/02-lists/index.html</guid>
      <description>Resources Slides The first collection we&amp;rsquo;ll review in Python is the list. A list in Python allows us to store many individual values, or elements, in a single variable. To keep track of the elements, each one is assigned an index, which is an integer that uniquely identifies the element&amp;rsquo;s position in the list. In Python, just like in many other programming languages, the indexes begin at $ 0 $ and count up from there.</description>
    </item>
    <item>
      <title>Loops with Lists</title>
      <link>https://ksu-cs-textbooks.github.io/intro-python/07-lists/03-loops-lists/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/intro-python/07-lists/03-loops-lists/index.html</guid>
      <description>Resources Slides One great way to work with lists in Python is using a loop. Recall from an earlier lab that a for loop actually iterates over a list itself, and that the range() function is simply used to generate a list that the for loop can use. Likewise, while loops can also be used in a similar way.
Let&amp;rsquo;s look at a quick example of how we can iterate through the items in a list using a loop in Python.</description>
    </item>
    <item>
      <title>Lists &amp; Functions</title>
      <link>https://ksu-cs-textbooks.github.io/intro-python/07-lists/04-list-functions/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/intro-python/07-lists/04-list-functions/index.html</guid>
      <description>Resources Slides Earlier in this lab, we saw Python Tutor create a list variable within the frame of a function, but that variable actually pointed to a list object that was stored in the global objects list. As it turns out, this seemingly minor distinction is a very important concept to understand how lists and functions interact with each other.
To demonstrate what is going on, let&amp;rsquo;s explore a program that contains multiple functions that operate on lists using Python Tutor once again.</description>
    </item>
    <item>
      <title>Slicing Lists</title>
      <link>https://ksu-cs-textbooks.github.io/intro-python/07-lists/05-slicing-lists/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/intro-python/07-lists/05-slicing-lists/index.html</guid>
      <description>Resources Slides One of the coolest features in Python is the ability to easily create slices of lists. A slice is simply a portion of a list that can be stored and used as a separate list, allowing us as programmers to quickly create and manipulate new lists based on existing lists.
There are two basic ways to create a list slice in Python.
nums[start:end] - this will create a slice of the list stored in nums that begins at the index start and ends before the index end.</description>
    </item>
    <item>
      <title>Strings are Lists</title>
      <link>https://ksu-cs-textbooks.github.io/intro-python/07-lists/06-strings-lists/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/intro-python/07-lists/06-strings-lists/index.html</guid>
      <description>Resources Slides Throughout this course, we&amp;rsquo;ve seen several different ways to work with strings. In Python, just like in many other programming languages, it is possible to treat strings as a list of individual characters. Because of this, we can write many useful programs that use and manipulate strings in a variety of ways.
Let&amp;rsquo;s look at one quick example program that can manipulate strings just like a list! Consider the following Python program:</description>
    </item>
    <item>
      <title>Worked Example</title>
      <link>https://ksu-cs-textbooks.github.io/intro-python/07-lists/07-example/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/intro-python/07-lists/07-example/index.html</guid>
      <description>Resources Slides Finally, let&amp;rsquo;s work through another full example program in Python that uses lists and strings, just to gain some more experience with the various ways we can use the techniques we&amp;rsquo;ve learned in this lab.
For this example, consider the following problem statement:
Write a program to construct and print Pascal&amp;rsquo;s Triangle for a given number of rows. The user should be prompted to enter a positive integer indicating the number of rows, and if the user provides an invalid input the program should prompt for additional input until valid input is received.</description>
    </item>
    <item>
      <title>Lists Practice</title>
      <link>https://ksu-cs-textbooks.github.io/intro-python/07-lists/08-lists-practice/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/intro-python/07-lists/08-lists-practice/index.html</guid>
      <description>Let&amp;rsquo;s try some simple practice problems. These problems are not graded - they are just for you to practice before doing the real exercises in the lab itself. You can find the answers below each question by clicking the button below each question.
7.1 Reading Code Consider the following Python program:
def positive_input(): x = int(input(&amp;#34;Enter a positive integer: &amp;#34;)) while x &amp;lt;= 0: print(&amp;#34;Invalid input!&amp;#34;) x = int(input(&amp;#34;Enter a positive integer: &amp;#34;)) return x def foo(numbers): output = [] for i in range(0, len(numbers) - 1, 2): output.</description>
    </item>
    <item>
      <title>Summary</title>
      <link>https://ksu-cs-textbooks.github.io/intro-python/07-lists/09-summary/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/intro-python/07-lists/09-summary/index.html</guid>
      <description>In this lab, we introduced several major important topics in Python. Let&amp;rsquo;s quickly review them.
Python Lists Lists in Python allow us to store multiple elements in a single variable, with each element identified by a unique index within the list.
Lists can be created using square brackets []:
list_a = [] list_b = [5, 3, 7]Adding and Accessing List Items New elements can be added to a list using the append() method:</description>
    </item>
  </channel>
</rss>